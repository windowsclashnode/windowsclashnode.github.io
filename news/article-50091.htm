<!doctype html>
<html lang="en">

<head>
        <link rel="canonical" href="https://windowsclashnode.github.io/news/article-50091.htm" />
    <!-- Required Meta Tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- Document Title, Description, and Author -->
    <title>Task提高异步执行效率技巧_C#教程_</title>
        <meta name="description" content="async Task 语法糖出来后，异步编程变得非常简单，适合需要耗费较长时间的任务。 有些小伙伴使用后可能会非常疑惑，使用异步和同步，在耗时上几乎没有差别。 下面我们看一个例子，场景是需要调用多个第" />
        <link rel="icon" href="/assets/website/img/windowsclashnode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="WindowsClashNode节点订阅站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://windowsclashnode.github.io/news/article-50091.htm" />
    <meta property="og:site_name" content="WindowsClashNode节点订阅站" />
    <meta property="og:title" content="Task提高异步执行效率技巧_C#教程_" />
    <meta property="og:image" content="https://windowsclashnode.github.io/uploads/20240618/65ddee122da96f2f7efb02967d15fc99.webp" />
        <meta property="og:release_date" content="2025-02-02T09:28:07" />
    <meta property="og:updated_time" content="2025-02-02T09:28:07" />
        <meta property="og:description" content="async Task 语法糖出来后，异步编程变得非常简单，适合需要耗费较长时间的任务。 有些小伙伴使用后可能会非常疑惑，使用异步和同步，在耗时上几乎没有差别。 下面我们看一个例子，场景是需要调用多个第" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Task提高异步执行效率技巧_C#教程_">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <!-- Google Fonts Files -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:ital,wght@0,400;0,500;0,600;0,700;0,800;0,900;1,400;1,500;1,600;1,700;1,800;1,900&family=Roboto+Condensed:ital,wght@0,300;0,400;0,700;1,300;1,400;1,700&display=swap" rel="stylesheet">
    <!-- CSS Files -->
    <link rel="stylesheet" href="/assets/website/css/windowsclashnode/hello-bsb.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-FQY7STE0Q8"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-FQY7STE0Q8');
</script>    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-bs-spy="scroll" data-bs-target="#bsb-tpl-navbar" data-bs-smooth-scroll="true" tabindex="0" data-page="detail">
        <!-- Header -->
    <header id="header" class="sticky-top bsb-tpl-header-sticky bsb-tpl-header-sticky-animationX">
        <!-- Navbar 1 - Bootstrap Brain Component -->
        <nav id="scrollspyNav" class="navbar navbar-expand-lg bsb-tpl-bg-alabaster bsb-navbar bsb-navbar-hover bsb-navbar-caret bsb-tpl-navbar-sticky" data-bsb-sticky-target="#header">
            <div class="container">
                <a class="navbar-brand" href="/">
                                <span>Windows ClashNode</span>
                                </a>
                <button class="navbar-toggler border-0" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasNavbar" aria-controls="offcanvasNavbar">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-list" viewBox="0 0 16 16">
                        <path fill-rule="evenodd" d="M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z" />
                    </svg>
                </button>
                <div class="offcanvas offcanvas-end" tabindex="-1" id="offcanvasNavbar" aria-labelledby="offcanvasNavbarLabel">
                    <div class="offcanvas-header">
                        <h5 class="offcanvas-title" id="offcanvasNavbarLabel">Menu</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                    </div>
                    <div class="offcanvas-body">
                        <ul id="bsb-tpl-navbar" class="navbar-nav justify-content-end flex-grow-1">
                                                        <li class="nav-item">
                                <a class="nav-link" href="/">首页</a>
                            </li>
                                                        <li class="nav-item">
                                <a class="nav-link" href="/free-nodes/">免费节点</a>
                            </li>
                                                        <li class="nav-item">
                                <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                            </li>
                                                        <li class="nav-item">
                                <a class="nav-link" href="/client.htm">客户端</a>
                            </li>
                                                        <li class="nav-item">
                                <a class="nav-link" href="/news/">新闻资讯</a>
                            </li>
                                                    </ul>
                    </div>
                </div>
            </div>
        </nav>
    </header>
    <!-- Hero 3 - Bootstrap Brain Component -->
    <section id="scrollspyHero" class="bsb-tpl-bg-alabaster pt-3 pt-xl-2 list">
        <div class="container overflow-hidden">
            <div class="row gy-5 gy-lg-0">
                <div class="col-12 col-lg-6 slogan">
                    <h1 class="display-3 fw-bold mb-3">Task提高异步执行效率技巧_C#教程_ </h1>
                    <p class="fs-4 mb-5">
                        <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / <span>正文</span>
                    </p>
                </div>
                <div class="col-12 col-lg-5 text-center">
                    <div class="position-relative">
                        <div class="bsb-circle border border-4 border-accent position-absolute top-50 start-10 translate-middle z-1"></div>
                        <div class="bsb-circle bg-primary position-absolute top-50 start-50 translate-middle" style="--bsb-cs: 460px;"></div>
                        <div class="bsb-circle border border-4 border-accent position-absolute top-10 end-0 z-1" style="--bsb-cs: 100px;"></div>
                        <img class="img-fluid position-relative z-2" loading="lazy" href="/assets/website/img/windowsclashnode/hero/hero-img-1.webp" alt="">
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- Main -->
    <main id="main">
        <!-- Process 1 - Bootstrap Brain Component -->
        <section id="scrollspyAbout" class="py-5 py-xl-8 py-xxl-16">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<p>async Task 语法糖出来后，异步编程变得非常简单，适合需要耗费较长时间的任务。</p> <p>有些小伙伴使用后可能会非常疑惑，使用异步和同步，在耗时上几乎没有差别。</p> <p>下面我们看一个例子，场景是需要调用多个第三方的WebApi，分别是获取名称、年龄、性别，由于网络环境等原因，api响应时间可能会接近1秒</p> <div class="ay1code"> <pre class="brush:csharp;">public async Task Test()  {      var sw = new Stopwatch();      sw.Start();        var userName = await GetUserNameAsync();      var userAge = await GetUserAgeAsync();      var userSex = await GetUserSexAsync();        sw.Stop();      var ts = sw.Elapsed;      Console.WriteLine($"总共耗时：{ts.TotalMilliseconds}ms");  }    private async Task&lt;string&gt; GetUserNameAsync()  {      await Task.Delay(500);      return "小明";  }    private async Task&lt;string&gt; GetUserAgeAsync()  {      await Task.Delay(800);      return "11";  }    private async Task&lt;string&gt; GetUserSexAsync()  {      await Task.Delay(900);      return "11";  }</pre> </div> <p>运行后发现，这个时间2秒多，这用户体验肯定是无法忍受的</p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220412/8fb645320e0f15c366442a5622f4ab34.jpg"></p> <p>导致这样结果的原因是每次进行异步调用的时候，都在异步函数前加上了 await ，对于单单这个过程来说，其实相当于同步，等待直到结果返回，每个异步函数都await，时间自然就叠加了，为了解决这个问题，使用一个小技巧，可以将代码改成下面这样</p> <div class="ay1code"> <pre class="brush:csharp;">public async Task Test()  {      var sw = new Stopwatch();      sw.Start();        var userNameTask =  GetUserNameAsync();      var userAgeTask =  GetUserAgeAsync();      var userSexTask =  GetUserSexAsync();        var userName = await userNameTask;      var userAge = await userAgeTask;      var userSex = await userSexTask;        sw.Stop();      var ts = sw.Elapsed;      Console.WriteLine($"总共耗时：{ts.TotalMilliseconds}ms");  }    private async Task&lt;string&gt; GetUserNameAsync()  {      await Task.Delay(500);      return "小明";  }    private async Task&lt;string&gt; GetUserAgeAsync()  {      await Task.Delay(800);      return "11";  }    private async Task&lt;string&gt; GetUserSexAsync()  {      await Task.Delay(900);      return "11";  }</pre> </div> <p>这次运行的总耗时，就是3个异步中，耗时最长那个GetUserSexAsync</p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220412/5245e55b5f871be4c53c2b6140e8ff1d.jpg"></p> <p>为什么会这样呢，这个小技巧的关键是这里，当执行到异步函数的时候，不加 await，不进行等待，让这些任务乖乖在别的线程的执行，当需要用到他们的时候，再去等待返回值，所以时间上不会进行叠加，哪个最长，总耗时就是哪个</p> <div class="ay1code"> <pre class="brush:csharp;">var userNameTask =  GetUserNameAsync();  var userAgeTask =  GetUserAgeAsync();  var userSexTask =  GetUserSexAsync();    var userName = await userNameTask;  var userAge = await userAgeTask;  var userSex = await userSexTask;</pre> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-50090.htm">反射 三种获得class对象的方式</a></p>
                                        <p>下一个：<a href="/news/article-50600.htm">解决 “TypeError Cannot read properties of undefined (reading ‘xxx‘)“</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-64111.htm" title="win11系统新硬盘不显示怎么办">win11系统新硬盘不显示怎么办</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-18-free-subscribe-node.htm" title="「2月18日」最高速度21.2M/S，2025年Shadowrocket/SSR/Clash/V2ray每天更新免费机场订阅节点链接">「2月18日」最高速度21.2M/S，2025年Shadowrocket/SSR/Clash/V2ray每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-64725.htm" title="狗狗领养协议一般是怎么规定的呢（狗狗领养手续）">狗狗领养协议一般是怎么规定的呢（狗狗领养手续）</a></li>
                        <li class="py-2"><a href="/news/article-42621.htm" title="动物医院优质好评评语 动物医院优质好评评语怎么写">动物医院优质好评评语 动物医院优质好评评语怎么写</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-4-free-ssr-node.htm" title="「2月4日」最高速度22.6M/S，2025年Clash/V2ray/SSR/Shadowrocket每天更新免费机场订阅节点链接">「2月4日」最高速度22.6M/S，2025年Clash/V2ray/SSR/Shadowrocket每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-53800.htm" title="1970年农历4月28日是什么星座（1970年阴历四月二十七是什么星座）">1970年农历4月28日是什么星座（1970年阴历四月二十七是什么星座）</a></li>
                        <li class="py-2"><a href="/news/article-67245.htm" title="中国农大动物医院哪个医生好一点呢（中国农大动物医院哪个医生好一点呢视频）">中国农大动物医院哪个医生好一点呢（中国农大动物医院哪个医生好一点呢视频）</a></li>
                        <li class="py-2"><a href="/news/article-36694.htm" title="spark1.6.1和2.4读取csv文件，转为为DataFrame和使用SQL">spark1.6.1和2.4读取csv文件，转为为DataFrame和使用SQL</a></li>
                        <li class="py-2"><a href="/news/article-62919.htm" title="动物医院看病多少钱一天啊图片（动物医院诊疗范围）">动物医院看病多少钱一天啊图片（动物医院诊疗范围）</a></li>
                        <li class="py-2"><a href="/news/article-47084.htm" title="适合穷人养的猫咪（适合穷人养的猫咪品种）">适合穷人养的猫咪（适合穷人养的猫咪品种）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">12</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section>
    </main>
        <!-- Footer 3 - Bootstrap Brain Component -->
    <footer class="footer">
        <div class="border-top py-4 py-md-5 py-xl-8">
            <div class="container overflow-hidden">
                <div class="row gy-4 gy-md-0">
                    <div class="col-xs-12 col-md-12 order-2 order-md-1">
                        <div class="footer-copyright-wrapper text-center">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                            WindowsClashNode节点订阅站 版权所有 Powered by WordPress
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </footer>
    <script src="/assets/website/js/frontend/windowsclashnode/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/windowsclashnode/bootstrap/bootstrap.bundle.min.js"></script>
    <!-- Javascript Files: Controllers -->
    <script src="/assets/website/js/frontend/windowsclashnode/global.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>