<!doctype html>
<html lang="en">

<head>
        <link rel="canonical" href="https://windowsclashnode.github.io/news/article-58499.htm" />
    <!-- Required Meta Tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- Document Title, Description, and Author -->
    <title>Django的原生ORM框架如何支持MongoDB，同时应对客户使用时随时变动字段</title>
        <meta name="description" content="　　需要开发一个系统，处理大量EXCEL表格信息，各种类别。表格标题多变，因此使用不需要预先设计数据表结构的MongoDB，即NoSQL。一是字段不固定，二是同名字段可以存储不同的字段类型。 　　同时" />
        <link rel="icon" href="/assets/website/img/windowsclashnode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="WindowsClashNode节点订阅站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://windowsclashnode.github.io/news/article-58499.htm" />
    <meta property="og:site_name" content="WindowsClashNode节点订阅站" />
    <meta property="og:title" content="Django的原生ORM框架如何支持MongoDB，同时应对客户使用时随时变动字段" />
    <meta property="og:image" content="https://windowsclashnode.github.io/uploads/20240618/af92740b9a14271c3b4d7b1ec3a1b09b.webp" />
        <meta property="og:release_date" content="2025-02-18T00:39:01" />
    <meta property="og:updated_time" content="2025-02-18T00:39:01" />
        <meta property="og:description" content="　　需要开发一个系统，处理大量EXCEL表格信息，各种类别。表格标题多变，因此使用不需要预先设计数据表结构的MongoDB，即NoSQL。一是字段不固定，二是同名字段可以存储不同的字段类型。 　　同时" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Django的原生ORM框架如何支持MongoDB，同时应对客户使用时随时变动字段">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <!-- Google Fonts Files -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:ital,wght@0,400;0,500;0,600;0,700;0,800;0,900;1,400;1,500;1,600;1,700;1,800;1,900&family=Roboto+Condensed:ital,wght@0,300;0,400;0,700;1,300;1,400;1,700&display=swap" rel="stylesheet">
    <!-- CSS Files -->
    <link rel="stylesheet" href="/assets/website/css/windowsclashnode/hello-bsb.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-FQY7STE0Q8"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-FQY7STE0Q8');
</script>    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-bs-spy="scroll" data-bs-target="#bsb-tpl-navbar" data-bs-smooth-scroll="true" tabindex="0" data-page="detail">
        <!-- Header -->
    <header id="header" class="sticky-top bsb-tpl-header-sticky bsb-tpl-header-sticky-animationX">
        <!-- Navbar 1 - Bootstrap Brain Component -->
        <nav id="scrollspyNav" class="navbar navbar-expand-lg bsb-tpl-bg-alabaster bsb-navbar bsb-navbar-hover bsb-navbar-caret bsb-tpl-navbar-sticky" data-bsb-sticky-target="#header">
            <div class="container">
                <a class="navbar-brand" href="/">
                                <span>Windows ClashNode</span>
                                </a>
                <button class="navbar-toggler border-0" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasNavbar" aria-controls="offcanvasNavbar">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-list" viewBox="0 0 16 16">
                        <path fill-rule="evenodd" d="M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z" />
                    </svg>
                </button>
                <div class="offcanvas offcanvas-end" tabindex="-1" id="offcanvasNavbar" aria-labelledby="offcanvasNavbarLabel">
                    <div class="offcanvas-header">
                        <h5 class="offcanvas-title" id="offcanvasNavbarLabel">Menu</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                    </div>
                    <div class="offcanvas-body">
                        <ul id="bsb-tpl-navbar" class="navbar-nav justify-content-end flex-grow-1">
                                                        <li class="nav-item">
                                <a class="nav-link" href="/">首页</a>
                            </li>
                                                        <li class="nav-item">
                                <a class="nav-link" href="/free-nodes/">免费节点</a>
                            </li>
                                                        <li class="nav-item">
                                <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                            </li>
                                                        <li class="nav-item">
                                <a class="nav-link" href="/client.htm">客户端</a>
                            </li>
                                                        <li class="nav-item">
                                <a class="nav-link" href="/news/">新闻资讯</a>
                            </li>
                                                    </ul>
                    </div>
                </div>
            </div>
        </nav>
    </header>
    <!-- Hero 3 - Bootstrap Brain Component -->
    <section id="scrollspyHero" class="bsb-tpl-bg-alabaster pt-3 pt-xl-2 list">
        <div class="container overflow-hidden">
            <div class="row gy-5 gy-lg-0">
                <div class="col-12 col-lg-6 slogan">
                    <h1 class="display-3 fw-bold mb-3">Django的原生ORM框架如何支持MongoDB，同时应对客户使用时随时变动字段 </h1>
                    <p class="fs-4 mb-5">
                        <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / <span>正文</span>
                    </p>
                </div>
                <div class="col-12 col-lg-5 text-center">
                    <div class="position-relative">
                        <div class="bsb-circle border border-4 border-accent position-absolute top-50 start-10 translate-middle z-1"></div>
                        <div class="bsb-circle bg-primary position-absolute top-50 start-50 translate-middle" style="--bsb-cs: 460px;"></div>
                        <div class="bsb-circle border border-4 border-accent position-absolute top-10 end-0 z-1" style="--bsb-cs: 100px;"></div>
                        <img class="img-fluid position-relative z-2" loading="lazy" href="/assets/website/img/windowsclashnode/hero/hero-img-1.webp" alt="">
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- Main -->
    <main id="main">
        <!-- Process 1 - Bootstrap Brain Component -->
        <section id="scrollspyAbout" class="py-5 py-xl-8 py-xxl-16">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				</h1> <p>　　需要开发一个系统，处理大量EXCEL表格信息，各种类别。表格标题多变，因此使用不需要预先设计数据表结构的MongoDB，即NoSQL。一是字段不固定，二是同名字段可以存储不同的字段类型。</p> <p>　　同时，后端确定使用Django，原因是数据处理这一块，python无敌于天下。</p> <p><strong>Django采用MVT模式开发。MODEL是最关键的部分。是ORM的核心。但是ORM主要用于关系型数据库。那么如何解决？</strong></p> </h1> <h3><strong>（1）mongoengine</strong></h3> <p><strong></strong><span style="font-size: 1.17em">&nbsp;mongoengine（跟pymongodb类似，但是相比于后者，又能提供模型类的功能，封装一些数据操作，不用单独写一堆crub）</span></p> <p><span style="font-size: 1.17em">&nbsp; &nbsp; &nbsp; 缺点：经反复测试研究，不支持django的原生后台管理功能，因为无法将django的数据迁移到mongodb数据库中因此无法使用原生的后台管理界面，需要定制。</span></p> <h3><strong>（2）djongo（注意不是django。爹是django，妈是mongodb，交配出来的物种）</strong></h3> <p><strong><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/371f1e1db3faf71ca0fa48a00d7be41b.jpg" alt="Django的原生ORM框架如何支持MongoDB，同时应对客户使用时随时变动字段"></strong></p> <p><strong><strong>&nbsp; &nbsp; &nbsp; &nbsp;与Django支持的其它SQL数据库类型，用于支持Nosql。</strong></strong></p> <p><strong><strong><strong>&nbsp; &nbsp; &nbsp; &nbsp;可以将django的数据迁移到mongodb数据库中，也可以使用原生的后台管理界面</strong></strong></strong></p> <p><strong><strong><strong><strong>（3）Django-nonrel</strong></strong></strong></strong></p> <p><strong><strong><strong><strong>　　django的分支，有时间可以研究一下。<br /></strong></strong></strong></strong></p> </h1> <p>&nbsp;　　OVM模型的重点就是提前定义类的成员，同时迁移到数据表中，形成相应字段。</p> <p>&nbsp; &nbsp; &nbsp; &nbsp; 对于一个excel表，记录图书信息，比如，书名，出版日期。</p> <p>&nbsp; &nbsp; &nbsp; &nbsp; 我们只需要用下述方式定义一个类，</p> <div class="cnblogs_Highlighter"> <pre class="brush:python;gutter:true;"># 创建图书类 class BookInfo(models.Model):     """图书模型类"""     # 图书名称，CharField说明是该类属性是一个字符串，max_length指定最大长度     book_title = models.CharField(max_length=20)      # 出版日期，DateField说明该类属性是一个日期     book_pub_date = models.DateField()      def __str__(self):         """覆盖对BookInfo实例化对象使用str()的返回值"""         return self.book_title  # 返回书名</pre> </div> <p>　　作为model放入django中。后面执行如下操作，数据库就可以相应的自动变化了。</p> <p>&nbsp; &nbsp; &nbsp; &nbsp;有djongo对django和mongodb支持，我们可以将mongodb“仿”为ORM模型，注意，是仿。</p> <div class="cnblogs_Highlighter"> <pre class="brush:python;gutter:true;">def get(request):     # book=BookInfo()     # book.book_title='水浒传'     # book.book_pub_date=date(1960,1,1)          # book.save()    #    return HttpResponse('helloworld')</pre> </div> <p><strong>那么如何随时变动字段呢？比如，哪天使用方的excel表格又变动了，增加了一列，比如作者。那么如何将作者这个字段加入呢？同时，不改变原始代码？</strong></p> </h1> <h3><strong>（1）模型save的局限性</strong></h3> <pre class="brush:python;gutter:true;"> 首先，python支持类成员随时定义，我们直接在模型类对象中，添加一个成员。<br/>  # book.author = '罗贯中'<br/> 但是发现模型的save操作，对这个临时增加的成员不处理，无法加入数据库中。<br/> save只处理在原始models.py文件中定义BookInfo的时候定义的固定类成员。<br/> 通过调试发现，Django在运行前需要首先对各个models.py进行解析。因此，后续在模型类实例化对象中临时增加成员，是没用的。</pre> <h3><strong>（2）我的方式：强制解析新的模型类，支持对字段进行变动，更好时候NoSQL</strong></h3> <p><strong>　通过文件定义的类，具有一些特殊字段。__module__ __qualname和__doc__</strong></p> <p><strong>&nbsp; &nbsp;由于Django只处理models.py文件中定义的模型类。所以，</strong></p> <p><strong>&nbsp; &nbsp;在程序执行时，动态创建新的模型类，并且修改其成员属性，把其仿真为文件中定义的模型类，然后再用django进行解析，使其能够作为ORM的新model。</strong></p> <p><strong></strong></p> <div class="cnblogs_Highlighter"> <pre>BookInfo = type('BookInfo', (models.Model,), {"__module__":"booktest.models",'__qualname__':'BookInfo',"__doc__":"注释", "book_title": models.CharField(max_length=20),"book_pub_date" :models.DateField(),"author": models.CharField(max_length=20)})<br/>book=BookInfo()<br/>book.book_title='三国演义xxx'<br/>book.book_pub_date=date(1960,1,1)<br/>book.author='我是杰少啊'<br/>book.save()</pre> </div> <p>　注意两点：第一，由于内存中有原始模型类BookInfo，我们要对其完全覆盖掉。</p> <p>&nbsp; &nbsp;上面type为什么会触发django重新解析模型类呢？</p> <p>&nbsp; &nbsp;因为BookInfo继承的model，核心是继承Django的ModelBase类。当执行上述动态类定义过程时，就会触发解析。</p> <p>&nbsp; &nbsp;通过上述处理，我们就能实现对数据库插入作者字段了。数据库中内容如下：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/09859588bdd218d4b73be23311beebb8.jpg" alt="Django的原生ORM框架如何支持MongoDB，同时应对客户使用时随时变动字段"></p> <p><span style="font-size: 1.17em"></span></p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-58253.htm">猫三联到底是几针疫苗啊（猫三联到底是几针疫苗啊图片）</a></p>
                                        <p>下一个：<a href="/news/article-58500.htm">Git基础Commit对象</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-18698.htm" title="猫挠出血不打针有事吗（猫挠出血不打针有事吗科普）">猫挠出血不打针有事吗（猫挠出血不打针有事吗科普）</a></li>
                        <li class="py-2"><a href="/news/article-23952.htm" title="pytorch: 计算ConvTranspose1d输出特征大小">pytorch: 计算ConvTranspose1d输出特征大小</a></li>
                        <li class="py-2"><a href="/news/article-23494.htm" title="nohup: redirecting stderr to stdout的解决办法">nohup: redirecting stderr to stdout的解决办法</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-16-free-node-subscribe.htm" title="「12月16日」最高速度19.2M/S，2024年V2ray/SSR/Shadowrocket/Clash每天更新免费机场订阅节点链接">「12月16日」最高速度19.2M/S，2024年V2ray/SSR/Shadowrocket/Clash每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-54348.htm" title="Python  turtle  模块可以编写游戏，是真的吗？">Python  turtle  模块可以编写游戏，是真的吗？</a></li>
                        <li class="py-2"><a href="/news/article-35604.htm" title="开宠物零食网店手续（开宠物食品店需要多少钱）">开宠物零食网店手续（开宠物食品店需要多少钱）</a></li>
                        <li class="py-2"><a href="/news/article-51100.htm" title="promise和async/await区别">promise和async/await区别</a></li>
                        <li class="py-2"><a href="/news/article-41127.htm" title="动物医院 翻译英文 动物医院 翻译英文怎么说">动物医院 翻译英文 动物医院 翻译英文怎么说</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-9-free-node-subscribe.htm" title="「2月9日」最高速度19.7M/S，2025年V2ray/Shadowrocket/SSR/Clash每天更新免费机场订阅节点链接">「2月9日」最高速度19.7M/S，2025年V2ray/Shadowrocket/SSR/Clash每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-21651.htm" title="动物接种疫苗多少次免疫 动物接种疫苗多少次免疫了">动物接种疫苗多少次免疫 动物接种疫苗多少次免疫了</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">57</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section>
    </main>
        <!-- Footer 3 - Bootstrap Brain Component -->
    <footer class="footer">
        <div class="border-top py-4 py-md-5 py-xl-8">
            <div class="container overflow-hidden">
                <div class="row gy-4 gy-md-0">
                    <div class="col-xs-12 col-md-12 order-2 order-md-1">
                        <div class="footer-copyright-wrapper text-center">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                            WindowsClashNode节点订阅站 版权所有 Powered by WordPress
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </footer>
    <script src="/assets/website/js/frontend/windowsclashnode/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/windowsclashnode/bootstrap/bootstrap.bundle.min.js"></script>
    <!-- Javascript Files: Controllers -->
    <script src="/assets/website/js/frontend/windowsclashnode/global.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>